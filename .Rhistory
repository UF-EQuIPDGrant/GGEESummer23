width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
gender <-  select(GGEE_23_Pre, Gender, Program)
gender2 <- gender|>
count(Gender, Program)
gender3 <- na.omit(gender2)
gender_n <- 4+48+7+156+1+6+5
gender_n
ggplot(gender3, aes(x=Gender, y = n, fill= Program))+
geom_bar(position= position_dodge(),stat="identity",
colour='black', size=.3) +
theme_classic()+
theme(legend.position = c(.15, .7))+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer Programs 2023 Genders")+
theme(plot.title = element_text(hjust = 0.5))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 160), n.breaks=20)+
scale_fill_brewer(guide = guide_legend(reverse = TRUE),palette = "Blues")+
xlab("Gender")+
ylab("Number of Students")
ggsave(
filename = "GGEE_23_Summer_Gender_Both.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
gender_intro <- filter(gender3, Program == "Introductory - 1st Year with GGEE")
gender_intro_n <- 48+156+6+5
gender_intro_n
ggplot(gender_intro, aes(x=Gender, y = n))+
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(legend.position = c(0.8, 0.8))+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Introductory Summer Programs 2023 Genders")+
theme(plot.title = element_text(hjust = 0.5))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 170), n.breaks=20)+
xlab("Gender")+
ylab("Number of Students")
ggsave(
filename = "GGEE_23_Summer_Gender_Intro.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
gender_adv <- filter(gender3, Program == "Advanced - 2nd Year with GGEE")
gender_adv_n <- 4+7+1
gender_adv_n
ggplot(gender_adv, aes(x=Gender, y = n))+
geom_bar(position= position_dodge(),stat="identity", fill= "#DDEBF7", colour='black', size=.3) +
theme_classic()+
theme(legend.position = c(0.8, 0.8))+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Advanced Summer Programs 2023 Genders")+
theme(plot.title = element_text(hjust = 0.5))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 10), n.breaks=10)+
xlab("Gender")+
ylab("Number of Students")
ggsave(
filename = "GGEE_23_Summer_Gender_Adv.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
gender_pie <- gender|>
count(Gender)|>
na.omit(gender)
gender_pie_n <- 4+48+7+156+1+6+5
df2 <- gender_pie%>%
mutate(csum = rev(cumsum(rev(n))),
pos = n/2 + lead(csum, 1),
pos = if_else(is.na(pos), n/2, pos))
ggplot(gender_pie, aes(x="", y=n, fill=Gender)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0)+
theme_void()+
scale_fill_brewer(guide = guide_legend(reverse = TRUE),palette = "Blues")+
ggtitle("GGEE Summer 2023 Gender Distribution")+
theme(plot.title = element_text(hjust = 0.5, vjust = .5))+
geom_label_repel(data = df2,
aes(y = pos, label = paste0(round(n/gender_pie_n*100, digits=1), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE)+
theme(legend.position = c(1, .5))
ggsave(
filename = "GGEE_23_Summer_Gender_PIE_Both.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
#Gender PIE Chart - INTRO
gender_pie0 <- filter(gender, Program == "Introductory - 1st Year with GGEE")
gender_pie_intro <- gender_pie0|>
count(Gender)|>
na.omit(gender_pie0)
gender_pie_intro_n <- 48+156+6+5
df_in <- gender_pie_intro%>%
mutate(csum = rev(cumsum(rev(n))),
pos = n/2 + lead(csum, 1),
pos = if_else(is.na(pos), n/2, pos))
ggplot(gender_pie_intro, aes(x="", y=n, fill=Gender)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0)+
theme_void()+
scale_fill_brewer(guide = guide_legend(reverse = TRUE),palette = "Blues")+
ggtitle("GGEE Introductory Summer 2023 Gender Distribution")+
theme(plot.title = element_text(hjust = 0.5, vjust = .5))+
geom_label_repel(data = df_in,
aes(y = pos, label = paste0(round(n/gender_pie_intro_n*100, digits=1), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE)+
theme(legend.position = c(1, .5))
ggsave(
filename = "GGEE_23_Summer_Gender_PIE_Intro.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
#Gender PIE Chart - ADV
gender_pie1 <- filter(gender, Program == "Advanced - 2nd Year with GGEE")
gender_pie_adv <- gender_pie1|>
count(Gender)|>
na.omit(gender_pie1)
gender_pie_adv_n <-  4+7+1
df_adv <- gender_pie_adv%>%
mutate(csum = rev(cumsum(rev(n))),
pos = n/2 + lead(csum, 1),
pos = if_else(is.na(pos), n/2, pos))
ggplot(gender_pie_adv, aes(x="", y=n, fill=Gender)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0)+
theme_void()+
scale_fill_brewer(guide = guide_legend(reverse = TRUE),palette = "Blues")+
ggtitle("GGEE Advanced Summer 2023 Gender Distribution")+
theme(plot.title = element_text(hjust = 0.5, vjust = .5))+
geom_label_repel(data = df_adv,
aes(y = pos, label = paste0(round(n/gender_pie_adv_n*100, digits=1), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE)+
theme(legend.position = c(1, .5))
ggsave(
filename = "GGEE_23_Summer_Gender_PIE_Adv.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, Response_ID, Experience_Type)
Q1Omit <- na.omit(Q1SresSel)
#no remove words
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sresclean<-anti_join(Q1Srestidy, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
wordcloud2(Q1Sres_counts)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
Q1results %>%
filter(n > 5) %>% # keep rows with word counts greater than 500
mutate(word = reorder(word, n)) %>% #reorder the word variable by n and replace with new variable called word
ggplot(aes(n, word)) + # create a plot with n on x axis and word on y axis
geom_col()+ # make it a bar plot
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer 2023 Student Prior Experience")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 30), n.breaks=5)+
xlab("Count")+
ylab("Words")
ggsave(
filename = "GGEE_23_.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, Response_ID, Experience_Type)
Q1Omit <- na.omit(Q1SresSel)
#no remove words
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sresclean<-anti_join(Q1Srestidy, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
wordcloud2(Q1Sres_counts)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
Q1results %>%
filter(n > 5) %>% # keep rows with word counts greater than 500
mutate(word = reorder(word, n)) %>% #reorder the word variable by n and replace with new variable called word
ggplot(aes(n, word)) + # create a plot with n on x axis and word on y axis
geom_col()+ # make it a bar plot
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer 2023 Student Prior Experience")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 30), n.breaks=5)+
xlab("Count")+
ylab("Words")
ggsave(
filename = "GGEE_23_.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Demographics",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
ggsave(
filename = "GGEE_23_Summer_Prior_Experience_Cloud.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Pre_Survey Responses",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
ggsave(
filename = "GGEE_23_Summer_Prior_Experience_Cloud.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Pre_Survey Responses",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
Q1results %>%
filter(n > 5) %>% # keep rows with word counts greater than 500
mutate(word = reorder(word, n)) %>% #reorder the word variable by n and replace with new variable called word
ggplot(aes(n, word)) + # create a plot with n on x axis and word on y axis
geom_col()+ # make it a bar plot
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer 2023 Student Prior Experience")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 30), n.breaks=5)+
xlab("Count")+
ylab("Words")
ggsave(
filename = "GGEE_23_Summer_Prior_Experience_Graph.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Pre_Survey Responses",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
library(htmlwidgets)
install.packages("webshot")
webshot::install_phantomjs()
library(wordcloud2)
hw <- wordcloud2(Q1results,size = 3)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1992, vheight = 1744, delay =10)
demoFreq
install.packages("webshot")
webshot::install_phantomjs()
hw <- wordcloud2(demoFreq,size = 3)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1992, vheight = 1744, delay =10)
##Export Word Cloud
install.packages("webshot")
webshot::install_phantomjs()
hw <- wordcloud2(Q1results,size = 3)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1992, vheight = 1744, delay =10)
Q1results %>%
filter(n > 5) %>% # keep rows with word counts greater than 500
mutate(word = reorder(word, n)) %>% #reorder the word variable by n and replace with new variable called word
ggplot(aes(n, word)) + # create a plot with n on x axis and word on y axis
geom_col()+ # make it a bar plot
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer 2023 Student Prior Experience")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 30), n.breaks=5)+
xlab("Count")+
ylab("Words")
ggsave(
filename = "GGEE_23_Summer_Prior_Experience_Graph.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Pre_Survey Responses",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
##Export Word Cloud
install.packages("webshot")
hw <- wordcloud2(Q1results,size = 3)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1992, vheight = 1744, delay =10)
View(Q1results)
View(Q1results)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
wordcloud2(Q1results)
wordcloud(words = d$word,
freq = d$freq,
scale = c(8,.3),
random.order = F,
random.color = F,
colors = pal)
wordcloud(words = Q1results$word,
freq = Q1results$freq,
scale = c(8,.3),
random.order = F,
random.color = F,
colors = pal)
wordcloud2(words = Q1results$word,
freq = Q1results$freq,
scale = c(8,.3),
random.order = F,
random.color = F,
colors = pal)
wordcloud2(data=Q1results, size=1.5)
wordcloud2(data=Q1results)
wordcloud2(data=Q1results, color=brewer.pal(9,"Blues"))
wordcloud2(data=Q1results, color=Blues)
wordcloud2(data=Q1results, color='Blues')
wordcloud2(data=Q1results, color='Blue')
wordcloud2(data=Q1results, color='random-blue')
wordcloud2(data=Q1results, color='random-light')
wordcloud2(data=Q1results, color='random-dark')
library(RColorBrewer)
color_range_number <- length(unique(Q1results$word))
color <- colorRampPalette(brewer.pal(9,"Blues")[3:7])(color_range_number)[factor(Q1results$word)]
wordcloud2(Q1results, color=color)
hw <-wordcloud2(Q1results, color=color)
#hw <- wordcloud2(Q1results,size = 3)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1992, vheight = 1744, delay =10)
webshot::webshot("1.html","1.png",vwidth = 1992, vheight = 1744, delay =5)
webshot::webshot("1.html","1.png",vwidth = 1800, vheight = 1200, delay =10)
hw <-wordcloud2(Q1results, color=color, size=2)
#hw <- wordcloud2(Q1results,size = 3)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1800, vheight = 1200, delay =10)
Q1results %>%
filter(n > 5) %>% # keep rows with word counts greater than 500
mutate(word = reorder(word, n)) %>% #reorder the word variable by n and replace with new variable called word
ggplot(aes(n, word)) + # create a plot with n on x axis and word on y axis
geom_col()+ # make it a bar plot
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer 2023 Student Prior Experience")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 30), n.breaks=5)+
xlab("Count")+
ylab("Words")
ggsave(
filename = "GGEE_23_Summer_Prior_Experience_Graph.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Pre_Survey Responses",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
Q1results %>%
filter(n > 5) %>% # keep rows with word counts greater than 500
mutate(word = reorder(word, n)) %>% #reorder the word variable by n and replace with new variable called word
ggplot(aes(n, word)) + # create a plot with n on x axis and word on y axis
geom_col()+ # make it a bar plot
geom_bar(position= position_dodge(),stat="identity", fill= "#9ECAE2", colour='black', size=.3) +
theme_classic()+
theme(axis.text.x = element_text(colour = "black"))+
theme(axis.text.y = element_text(colour = "black"))+
ggtitle("GGEE Summer 2023 Student Prior Experience")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 30), n.breaks=10)+
xlab("Count")+
ylab("Words")
ggsave(
filename = "GGEE_23_Summer_Prior_Experience_Graph.png",
plot = last_plot(),
device = "png",
path = "/Users/kristadulany/Documents/GitHub/GGEESummer23/Graphs/Pre_Survey Responses",
scale = 2,
width = 6,
height = 4,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL)
