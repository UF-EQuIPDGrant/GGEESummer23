rename(original = word) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type, to_lower = FALSE)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- Q1Sresclean %>%
rename(original = word) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type, to_lower = FALSE)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- Q1Sresclean %>%
rename(original = Q1Sresclean) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
rlang::last_trace()
Q1Sresclean2 %>% select(all_of(Q1Sresclean))
Q1Sresclean %>% select(all_of(Q1Sresclean))
data
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- Q1Sresclean %>%
rename(original = Q1Sresclean) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
Q1Sres_counts <- Q1Sresclean %>%
group_by(Q1Sresclean) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(Q1Sresclean)) %>%
filter(suggestion != Q1Sresclean)
Q1Sres_counts <- Q1Sresclean %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(Q1Sresclean)) %>%
filter(suggestion != Q1Sresclean)
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Q1Omit, word, Experience_Type, to_lower = FALSE)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- Q1Sresclean %>%
rename(original = Q1Sresclean) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
Omit <- as_tibble(Q1Omit, ...)
Omit <- as_tibble(Q1Omit)
##Make correct spelling function
library(hunspell)
library(purrr)
correct_spelling <- function(input) {
output <- case_when(
# any manual corrections
input == 'license' ~ 'licence',
# check and (if required) correct spelling
!hunspell_check(input, dictionary('en_GB')) ~
hunspell_suggest(input, dictionary('en_GB')) %>%
# get first suggestion, or NA if suggestions list is empty
map(1, .default = NA) %>%
unlist(),
TRUE ~ input # if word is correct
)
# if input incorrectly spelled but no suggestions, return input word
ifelse(is.na(output), input, output) }
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Omit, word, Experience_Type, to_lower = FALSE)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
Q1Sres_counts <- Q1Sresclean %>%
rename(original = Q1Sresclean) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
clean <- as_tibble(Q1Sresclean)
Q1Sres_counts <- Q1Sresclean %>%
rename(original = Q1Sresclean) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
View(Q1Sresclean)
words <- filter(Q1Sresclean,word)
Q1Sres_counts <- words %>%
rename(original = words) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
words <- filter(Q1Sresclean,word)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
words <- filter(Q1Sresclean,word)
words <- filter(Q1Sresclean, "word" )
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: August 31, 2023
---
#Load Libraries
library(tidyverse)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
library(ggrepel)
library(wordcloud2)
library(htmlwidgets)
library(webshot)
install.packages("webshot")
webshot::install_phantomjs()
install.packages("HH")
install.packages("lattice")
library(psych)
library(likert)
library(HH)
library(ggplot2)
pre_survey <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, Response_ID, Experience_Type)
Q1Omit <- na.omit(Q1SresSel)
Omit <- as_tibble(Q1Omit)
##Make correct spelling function
library(hunspell)
library(purrr)
correct_spelling <- function(input) {
output <- case_when(
# any manual corrections
input == 'license' ~ 'licence',
# check and (if required) correct spelling
!hunspell_check(input, dictionary('en_GB')) ~
hunspell_suggest(input, dictionary('en_GB')) %>%
# get first suggestion, or NA if suggestions list is empty
map(1, .default = NA) %>%
unlist(),
TRUE ~ input # if word is correct
)
# if input incorrectly spelled but no suggestions, return input word
ifelse(is.na(output), input, output) }
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Omit, word, Experience_Type, to_lower = FALSE)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
words <- filter(Q1Sresclean, "word" )
Q1Sres_counts <- words %>%
rename(original = words) %>%
group_by(original) %>%
summarise(count = n()) %>%
ungroup() %>% # so we can mutate word
mutate(suggestion = correct_spelling(original)) %>%
filter(suggestion != original)
Q1results <- filter(Q1Sres_counts, n > 1)
library(RColorBrewer)
color_range_number <- length(unique(Q1results$word))
color <- colorRampPalette(brewer.pal(9,"Blues")[3:7])(color_range_number)[factor(Q1results$word)]
hw <-wordcloud2(Q1results, color=color, size=2)
hw
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, Response_ID, Experience_Type)
Q1Omit <- na.omit(Q1SresSel)
Omit <- as_tibble(Q1Omit)
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Omit, word, Experience_Type, to_lower = FALSE)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: August 31, 2023
---
#Load Libraries
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
library(ggrepel)
library(wordcloud2)
library(htmlwidgets)
library(webshot)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, Response_ID, Experience_Type)
Q1Omit <- na.omit(Q1SresSel)
Omit <- as_tibble(Q1Omit)
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Omit, word, Experience_Type, to_lower = FALSE)
Omit_1 <- as_tibble(Q1Omit)
Q1Omit <- na.omit(Q1SresSel)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, Response_ID, Experience_Type)
View(Q1Sres)
Q1SresSel<- select(Q1Sres, Response ID, Experience Type)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: August 31, 2023
---
#Load Libraries
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
library(ggrepel)
library(wordcloud2)
library(htmlwidgets)
library(webshot)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
library(tidyselect)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
View(Q1Sres)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
View(Q1Sres)
library(dplyr)
GGEE_23_Pre0 <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
GGEE_23_Pre <-filter(GGEE_23_Pre0, Finished == "True")
library(dplyr)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
Q1Omit <- na.omit(Q1SresSel)
detach("package:MASS", unload = TRUE)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
Q1Omit <- na.omit(Q1SresSel)
Omit_1 <- as_tibble(Q1Omit)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: August 31, 2023
---
#Load Libraries
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
library(ggrepel)
library(wordcloud2)
library(htmlwidgets)
library(webshot)
install.packages("webshot")
install.packages("webshot")
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
Q1Omit <- na.omit(Q1SresSel)
Omit_1 <- as_tibble(Q1Omit)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: August 31, 2023
---
#Load Libraries
library(tidyverse)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
library(ggrepel)
library(wordcloud2)
library(htmlwidgets)
library(webshot)
install.packages("webshot")
install.packages("webshot")
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
Q1Omit <- na.omit(Q1SresSel)
Omit_1 <- as_tibble(Q1Omit)
correct_spelling <- function(input) {
output <- case_when(
# any manual corrections
input == 'license' ~ 'licence',
# check and (if required) correct spelling
!hunspell_check(input, dictionary('en_GB')) ~
hunspell_suggest(input, dictionary('en_GB')) %>%
# get first suggestion, or NA if suggestions list is empty
map(1, .default = NA) %>%
unlist(),
TRUE ~ input # if word is correct
)
# if input incorrectly spelled but no suggestions, return input word
ifelse(is.na(output), input, output) }
######################################################################################
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Omit, word, Experience_Type, to_lower = FALSE)
Q1Sres_remove<- anti_join(Q1Srestidy,remove_words) #remove repeat words
Q1Sresclean<-anti_join(Q1Sres_remove, stop_words)
words <- filter(Q1Sresclean, "word" )
Q1Sres_counts <- count(Q1Sresclean, word, sort = TRUE)
Q1results <- filter(Q1Sres_counts, n > 1)
library(RColorBrewer)
color_range_number <- length(unique(Q1results$word))
color <- colorRampPalette(brewer.pal(9,"Blues")[3:7])(color_range_number)[factor(Q1results$word)]
hw <-wordcloud2(Q1results, color=color, size=2)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: September 27, 2023
---
library(tidyverse)
library(tidytext)
detach("package:stats", unload = TRUE)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: September 27, 2023
---
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
Q1Sres <- read_excel("Data/Presurvey Data.xlsx", sheet= 6)
GGEE_23_PreSurvey <- read_excel("Data/GGEE_23_PreSurvey.xlsx")
View(GGEE_23_PreSurvey)
Q1SresSel
Q1SresSel<- select(GGEE_23_PreSurvey, Student, Quote)
Q1SresSel<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
View(Q1SresSel)
Q1SresSel<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
View(Q1SresSel)
remove_words <-data.frame("word"= c("coded", "program", "6th","null", "NA", "na", "coding", "ive", "that's", "code", "grade"))
Q1Srestidy<-unnest_tokens(Q1SresSel, word, Quote)
Experience<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Q1Srestidy<-unnest_tokens(Experience, word, Experience_Type)
Experience<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Experience_tidy<-unnest_tokens(Experience, word, Experience_Type)
rlang::last_trace()
View(Experience)
Experience_tidy<-unnest_tokens(Experience, word, ExperienceType)
View(Experience_tidy)
Q1Sres_remove<- anti_join(Experience_tidy,remove_words) #remove repeat words
Experience_remove<- anti_join(Experience_tidy,remove_words) #remove repeat words
Experience_clean<-anti_join(Experience_remove, stop_words)
words <- filter(Experience_clean, "word" )
View(Experience_clean)
View(Experience_clean)
Experience_tidy<-unnest_tokens(Experience, word, ExperienceType)
Experience_remove<- anti_join(Experience_tidy,remove_words) #remove repeat words
Experience_clean<-anti_join(Experience_remove, stop_words)
words <- filter(Q1Sresclean, word)
words <- filter(Experience_clean, word)
Experience_counts <- count(Experience_clean, word, sort = TRUE)
library(wordcloud2)
wordcloud2(Experience_counts)
GGEE_23_PreSurvey <- read_excel("Data/GGEE_23_PreSurvey.xlsx")
View(GGEE_23_PreSurvey)
Experience<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Experience_tidy<-unnest_tokens(Experience, word, ExperienceType)
Experience_omit <- na.omit(Experience_tidy)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: September 27, 2023
---
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
GGEE_23_PreSurvey <- read_excel("Data/GGEE_23_PreSurvey.xlsx")
Experience<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Experience_tidy<-unnest_tokens(Experience, word, ExperienceType)
Experience_omit <- na.omit(Experience_tidy)
Experience_remove<- anti_join(Experience_omit,remove_words) #remove repeat words
Experience_clean<-anti_join(Experience_remove, stop_words)
Experience_omit <- na.omit(Experience)
---
#title: Pre Survey Analysis
#author: Krista Dulany Chisholm
#date: September 27, 2023
---
library(tidyverse)
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
detach("package:tidyverse", unload = TRUE)
detach("package:tidytext", unload = TRUE)
install.packages("tidyverse")
library(tidyverse)
library(tidytext)
library(dplyr)
library(readr)
library(tidyr)
library(writexl)
library(readxl)
library(textdata)
library(ggplot2)
library(scales)
GGEE_23_PreSurvey <- read_excel("Data/GGEE_23_PreSurvey.xlsx")
Experience<- select(GGEE_23_PreSurvey, ResponseID, ExperienceType)
Experience_omit <- na.omit (Experience)
View(Experience)
Q1Sres <- read_excel("Data/GGEE_23_PreSurvey.xlsx", sheet = 1)
Q1SresSel<- select(Q1Sres, ResponseID, ExperienceType)
Q1Omit <- na.omit(Q1SresSel)
Omit_1 <- as_tibble(Q1Omit)
#remove words
remove_words <-data.frame("word"= c("coded", "program", "6th", "5th", "3rd", "4th", "7th", "0","1","10","
1st", "27","null", "NA", "na", "coding", "ive", "that's", "code", "grade", "2", "
2015", "2021", "2022", "30", "3rd", "50", "6", "9", "90", "experience", "learned", "called", "candy", "chapman", "forgot", "floor", "lake", "taught", "parents", "taking", "stuff", "simple", "east", "hart"))
Experience_tidy<-unnest_tokens(Experience, word, ExperienceType)
Experience_remove<- anti_join(Experience_omit,remove_words) #remove repeat words
View(Experience_remove)
View(Experience_tidy)
na.omit
